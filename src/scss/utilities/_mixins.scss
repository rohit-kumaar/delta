@import "node_modules/bootstrap/scss/functions";
@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins";

@mixin transition($props1, $props2: _) {
  transition: $props1 1s ease-in-out, $props2 1s ease-in-out;
}

@mixin backgroundImage($props, $extension) {
  background: url(../images/#{$props}.#{$extension}) no-repeat center
    center/cover;
}

// Media Query Start
@mixin mobile {
  @include media-breakpoint-up(sm) {
    @content;
  }
}

@mixin tablet {
  @include media-breakpoint-up(md) {
    @content;
  }
}

@mixin laptop {
  @include media-breakpoint-up(lg) {
    @content;
  }
}
// Media Query End


// Responsive 
$breakpoints: (
  'custom-small-mobile-max': (max-width: 359px),
  'portrait-mobile-max': (max-width: 575px),
  'mobile-min': (min-width: 576px),
  'mobile-max': (max-width: 767px),
  'ipad-min': (min-width: 768px),
  'ipad-max': (max-width: 991px),
  'desktop-min': (min-width: 992px),
  'desktop-max': (max-width: 1199px),
  'large-desktop-min': (min-width: 1200px),
  'medium-large-desktop-min': (min-width: 1366px),
  'medium-large-desktop-max': (max-width: 1400px),
);


@mixin breakpoint($name) {
  @if map-has-key($breakpoints, $name) {
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  } @else {
    @warn "Couldn't find a breakpoint named `#{$name}`.";
  }
}
